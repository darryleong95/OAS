
package ws.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OASPremiumService", targetNamespace = "http://ws.ejb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OASPremiumService {


    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "premiumRegistration", targetNamespace = "http://ws.ejb/", className = "ws.client.PremiumRegistration")
    @ResponseWrapper(localName = "premiumRegistrationResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.PremiumRegistrationResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/premiumRegistrationRequest", output = "http://ws.ejb/OASPremiumService/premiumRegistrationResponse")
    public Boolean premiumRegistration(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns ws.client.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "remoteLogin", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteLogin")
    @ResponseWrapper(localName = "remoteLoginResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteLoginResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/remoteLoginRequest", output = "http://ws.ejb/OASPremiumService/remoteLoginResponse")
    public Customer remoteLogin(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Double
     * @throws CustomerNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "remoteViewCreditBalance", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewCreditBalance")
    @ResponseWrapper(localName = "remoteViewCreditBalanceResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewCreditBalanceResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/remoteViewCreditBalanceRequest", output = "http://ws.ejb/OASPremiumService/remoteViewCreditBalanceResponse", fault = {
        @FaultAction(className = CustomerNotFoundException_Exception.class, value = "http://ws.ejb/OASPremiumService/remoteViewCreditBalance/Fault/CustomerNotFoundException")
    })
    public Double remoteViewCreditBalance(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws CustomerNotFoundException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns ws.client.AuctionListing
     * @throws AuctionListingNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "remoteViewAuctionListingDetails", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewAuctionListingDetails")
    @ResponseWrapper(localName = "remoteViewAuctionListingDetailsResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewAuctionListingDetailsResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/remoteViewAuctionListingDetailsRequest", output = "http://ws.ejb/OASPremiumService/remoteViewAuctionListingDetailsResponse", fault = {
        @FaultAction(className = AuctionListingNotFoundException_Exception.class, value = "http://ws.ejb/OASPremiumService/remoteViewAuctionListingDetails/Fault/AuctionListingNotFoundException")
    })
    public AuctionListing remoteViewAuctionListingDetails(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0)
        throws AuctionListingNotFoundException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns ws.client.ProxyBid
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "configureProxyBiddingForAuctionListing", targetNamespace = "http://ws.ejb/", className = "ws.client.ConfigureProxyBiddingForAuctionListing")
    @ResponseWrapper(localName = "configureProxyBiddingForAuctionListingResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.ConfigureProxyBiddingForAuctionListingResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/configureProxyBiddingForAuctionListingRequest", output = "http://ws.ejb/OASPremiumService/configureProxyBiddingForAuctionListingResponse")
    public ProxyBid configureProxyBiddingForAuctionListing(
        @WebParam(name = "arg0", targetNamespace = "")
        AuctionListing arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Customer arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Double arg2);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws AuctionListingNotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "configureSnipingForAuctionListing", targetNamespace = "http://ws.ejb/", className = "ws.client.ConfigureSnipingForAuctionListing")
    @ResponseWrapper(localName = "configureSnipingForAuctionListingResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.ConfigureSnipingForAuctionListingResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/configureSnipingForAuctionListingRequest", output = "http://ws.ejb/OASPremiumService/configureSnipingForAuctionListingResponse", fault = {
        @FaultAction(className = AuctionListingNotFoundException_Exception.class, value = "http://ws.ejb/OASPremiumService/configureSnipingForAuctionListing/Fault/AuctionListingNotFoundException")
    })
    public void configureSnipingForAuctionListing(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Long arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        Long arg3)
        throws AuctionListingNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ws.client.AuctionListing>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "remoteBrowseAllAuctionListings", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteBrowseAllAuctionListings")
    @ResponseWrapper(localName = "remoteBrowseAllAuctionListingsResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteBrowseAllAuctionListingsResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/remoteBrowseAllAuctionListingsRequest", output = "http://ws.ejb/OASPremiumService/remoteBrowseAllAuctionListingsResponse")
    public List<AuctionListing> remoteBrowseAllAuctionListings();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.client.AuctionListing>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "remoteViewWonAuctionListings", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewWonAuctionListings")
    @ResponseWrapper(localName = "remoteViewWonAuctionListingsResponse", targetNamespace = "http://ws.ejb/", className = "ws.client.RemoteViewWonAuctionListingsResponse")
    @Action(input = "http://ws.ejb/OASPremiumService/remoteViewWonAuctionListingsRequest", output = "http://ws.ejb/OASPremiumService/remoteViewWonAuctionListingsResponse")
    public List<AuctionListing> remoteViewWonAuctionListings(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

}
